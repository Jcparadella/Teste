import streamlit as st
import pandas as pd

# --- Configura√ß√£o da P√°gina ---
st.set_page_config(
    page_title="Formul√°rio de Registro - IHC",
    page_icon="üìù",
    layout="centered",
    initial_sidebar_state="expanded"
)

# --- T√≠tulo e Descri√ß√£o ---
st.title("üìù Sistema de Registro de Usu√°rios")
st.markdown(
    """
    Preencha os campos abaixo para registrar novos usu√°rios. Os dados ser√£o exibidos em uma tabela
    e voc√™ ter√° a op√ß√£o de baix√°-los em formato CSV.
    """
)
st.markdown("---")

# --- Inicializa√ß√£o da Sess√£o (para armazenar os dados) ---
# Adicionamos as novas colunas "Nome" e "CPF" ao DataFrame
if 'df_registros' not in st.session_state:
    st.session_state.df_registros = pd.DataFrame(columns=["Nome", "Sexo", "Idade", "CPF"])

# --- Formul√°rio de Registro ---
st.header("‚ú® Registrar Novo Usu√°rio")

with st.form(key='registro_form', clear_on_submit=True): # clear_on_submit=True j√° limpa os campos automaticamente
    # Campo Nome
    nome = st.text_input(
        "Nome Completo:",
        placeholder="Digite o nome do usu√°rio",
        help="Informe o nome completo do usu√°rio."
    )

    # Campos Sexo e Idade em colunas para melhor organiza√ß√£o visual
    col1, col2 = st.columns(2)
    with col1:
        sexo = st.selectbox(
            "Sexo:",
            options=["Masculino", "Feminino", "Outro", "N√£o Informar"],
            help="Selecione o sexo do usu√°rio."
        )
    with col2:
        idade = st.number_input(
            "Idade:",
            min_value=0,
            max_value=120,
            value=25,
            step=1,
            help="Informe a idade do usu√°rio (entre 0 e 120 anos)."
        )
    
    # Campo CPF
    cpf = st.text_input(
        "CPF:",
        placeholder="___.___.___-__",
        max_chars=14, # Limita o n√∫mero de caracteres para um CPF formatado
        help="Informe o CPF do usu√°rio (apenas n√∫meros ou formatado)."
    )

    st.markdown("---") # Separador visual

    # Bot√£o de Registro
    submit_button = st.form_submit_button(label='‚úÖ Registrar Usu√°rio')

if submit_button:
    # Valida√ß√£o simples dos campos
    if nome and sexo and idade is not None and cpf:
        novo_registro = pd.DataFrame([{"Nome": nome, "Sexo": sexo, "Idade": idade, "CPF": cpf}])
        st.session_state.df_registros = pd.concat([st.session_state.df_registros, novo_registro], ignore_index=True)
        st.success("Usu√°rio registrado com sucesso!")
    else:
        st.error("Por favor, preencha todos os campos para registrar o usu√°rio.")

### Tabela de Dados

st.header("üìã Dados Registrados")

if not st.session_state.df_registros.empty:
    st.dataframe(st.session_state.df_registros.style.set_properties(**{'background-color': '#f0f2f6', 'color': 'black'}), use_container_width=True)

    # --- Bot√£o de Download CSV ---
    st.markdown("---") # Separador visual para o bot√£o
    
    # Converte o DataFrame para CSV
    csv = st.session_state.df_registros.to_csv(index=False).encode('utf-8')
    
    st.download_button(
        label="üì• Baixar Tabela em CSV",
        data=csv,
        file_name="registros_usuarios.csv",
        mime="text/csv",
        help="Clique para baixar os dados da tabela em formato CSV."
    )
else:
    st.info("Nenhum dado registrado ainda. Utilize o formul√°rio acima para adicionar usu√°rios.")


st.markdown("---")
st.caption("Desenvolvido com ‚ù§Ô∏è por seu especialista em Python e Streamlit em Serra, Esp√≠rito Santo.")
